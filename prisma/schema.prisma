// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Self {
  id           Int     @id @default(autoincrement())
  masterDomain String?
  telemetry    Boolean @default(true)
}

model User {
  id           Int     @id @default(autoincrement())
  username     String  @unique
  email        String  @unique
  password     String
  avatar       String?
  uploadToken  String  @unique
  activeDomain String  @default("{{baseDomain}}}")

  domains      Domain[]
  tokens       WebToken[]
  embeds       Embed[]
  uploads      Upload[]
  shortendURLs ShortendUrl[]

  // Account Configuration
  admin     Boolean @default(false)
  verified  Boolean @default(false)
  suspended Boolean @default(false)

  // Tracking Data
  created_at DateTime @default(now())
  last_seen  DateTime @default(now())
}

model WebToken {
  id     Int    @id @default(autoincrement())
  token  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  // Tracking Data
  ip_address String
  user_agent String

  created_at DateTime @default(now())
  last_seen  DateTime @default(now())
}

model Embed {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  // Embed Data
  enabled     Boolean @default(true)
  title       String?
  description String?
  provider    String?
  author      String?
  color       String?
}

model Domain {
  id     Int    @id @default(autoincrement())
  domain String @unique

  users User[]
}

model Upload {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  shortId String @unique

  key      String
  filename String

  // Tracking Data
  created_at DateTime @default(now())
  views      Int      @default(0)
}

model ShortendUrl {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  shortId String @unique
  url     String

  // Tracking Data
  created_at DateTime @default(now())
  last_viewed DateTime?
  views      Int      @default(0)
}
